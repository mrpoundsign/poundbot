#go 1.11 module support per https://circleci.com/blog/go-v1.11-modules-and-circleci/
version: 2 # use CircleCI 2.0
jobs: # basic units of work in a run
  build: # runs not using Workflows must have a `build` job as entry point
    docker: # run the steps with Docker
      # CircleCI Go images available at: https://hub.docker.com/r/circleci/golang/
      - image: circleci/golang:1.12 #
      # CircleCI PostgreSQL images available at: https://hub.docker.com/r/circleci/postgres/
      - image: circleci/mongo

    environment: # environment variables for the build itself
      TEST_RESULTS: /tmp/test-reports # path to where test results will be saved
      GO111MODULE: "on"
      GOMAXPROCS: 4
      POUNDBOT_DIR: /home/circleci/project

    steps: # steps that comprise the `build` job
      # - run: GO111MODULE="off" go get github.com/jstemmer/go-junit-report
      - checkout # check out source code to working directory
      - run: mkdir -p $TEST_RESULTS/unit # create the test results directory

      - restore_cache:
          keys:
            - go-mod-v1-{{ checksum "go.sum" }}

      # Normally, this step would be in a custom primary image;
      # we've added it here for the sake of explanation.
      - run: go mod download

      - save_cache:
          key: go-mod-v1-{{ checksum "go.sum" }}
          paths:
            - "/go/pkg/mod"

      - run:
          name: Run unit tests

          # Store the results of our tests in the $TEST_RESULTS directory
          command: |
            gotestsum --junitfile ${TEST_RESULTS}/unit/gotestsum-report.xml -- ./... -tags integration -timeout 10s -race

      - store_artifacts: # Upload test summary for display in Artifacts: https://circleci.com/docs/2.0/artifacts/
          path: /tmp/test-reports
          destination: raw-test-output

      - store_test_results: # Upload test results for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
          path: /tmp/test-reports
