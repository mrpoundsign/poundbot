// Code generated by mockery v1.0.0. DO NOT EDIT.
package mocks

import db "mrpoundsign.com/poundbot/db"
import mock "github.com/stretchr/testify/mock"

// DataStore is an autogenerated mock type for the DataStore type
type DataStore struct {
	mock.Mock
}

// Chats provides a mock function with given fields:
func (_m *DataStore) Chats() db.ChatsStore {
	ret := _m.Called()

	var r0 db.ChatsStore
	if rf, ok := ret.Get(0).(func() db.ChatsStore); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(db.ChatsStore)
		}
	}

	return r0
}

// Clans provides a mock function with given fields:
func (_m *DataStore) Clans() db.ClansStore {
	ret := _m.Called()

	var r0 db.ClansStore
	if rf, ok := ret.Get(0).(func() db.ClansStore); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(db.ClansStore)
		}
	}

	return r0
}

// Close provides a mock function with given fields:
func (_m *DataStore) Close() {
	_m.Called()
}

// Copy provides a mock function with given fields:
func (_m *DataStore) Copy() db.DataStore {
	ret := _m.Called()

	var r0 db.DataStore
	if rf, ok := ret.Get(0).(func() db.DataStore); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(db.DataStore)
		}
	}

	return r0
}

// CreateIndexes provides a mock function with given fields:
func (_m *DataStore) CreateIndexes() {
	_m.Called()
}

// DiscordAuths provides a mock function with given fields:
func (_m *DataStore) DiscordAuths() db.DiscordAuthsStore {
	ret := _m.Called()

	var r0 db.DiscordAuthsStore
	if rf, ok := ret.Get(0).(func() db.DiscordAuthsStore); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(db.DiscordAuthsStore)
		}
	}

	return r0
}

// RaidAlerts provides a mock function with given fields:
func (_m *DataStore) RaidAlerts() db.RaidAlertsStore {
	ret := _m.Called()

	var r0 db.RaidAlertsStore
	if rf, ok := ret.Get(0).(func() db.RaidAlertsStore); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(db.RaidAlertsStore)
		}
	}

	return r0
}

// Users provides a mock function with given fields:
func (_m *DataStore) Users() db.UsersStore {
	ret := _m.Called()

	var r0 db.UsersStore
	if rf, ok := ret.Get(0).(func() db.UsersStore); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(db.UsersStore)
		}
	}

	return r0
}
