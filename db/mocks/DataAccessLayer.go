// Code generated by mockery v1.0.0. DO NOT EDIT.
package mocks

import db "mrpoundsign.com/poundbot/db"
import mock "github.com/stretchr/testify/mock"

// DataAccessLayer is an autogenerated mock type for the DataAccessLayer type
type DataAccessLayer struct {
	mock.Mock
}

// Chats provides a mock function with given fields:
func (_m *DataAccessLayer) Chats() db.ChatsAccessLayer {
	ret := _m.Called()

	var r0 db.ChatsAccessLayer
	if rf, ok := ret.Get(0).(func() db.ChatsAccessLayer); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(db.ChatsAccessLayer)
		}
	}

	return r0
}

// Clans provides a mock function with given fields:
func (_m *DataAccessLayer) Clans() db.ClansAccessLayer {
	ret := _m.Called()

	var r0 db.ClansAccessLayer
	if rf, ok := ret.Get(0).(func() db.ClansAccessLayer); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(db.ClansAccessLayer)
		}
	}

	return r0
}

// Close provides a mock function with given fields:
func (_m *DataAccessLayer) Close() {
	_m.Called()
}

// Copy provides a mock function with given fields:
func (_m *DataAccessLayer) Copy() db.DataAccessLayer {
	ret := _m.Called()

	var r0 db.DataAccessLayer
	if rf, ok := ret.Get(0).(func() db.DataAccessLayer); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(db.DataAccessLayer)
		}
	}

	return r0
}

// CreateIndexes provides a mock function with given fields:
func (_m *DataAccessLayer) CreateIndexes() {
	_m.Called()
}

// DiscordAuths provides a mock function with given fields:
func (_m *DataAccessLayer) DiscordAuths() db.DiscordAuthsAccessLayer {
	ret := _m.Called()

	var r0 db.DiscordAuthsAccessLayer
	if rf, ok := ret.Get(0).(func() db.DiscordAuthsAccessLayer); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(db.DiscordAuthsAccessLayer)
		}
	}

	return r0
}

// RaidAlerts provides a mock function with given fields:
func (_m *DataAccessLayer) RaidAlerts() db.RaidAlertsAccessLayer {
	ret := _m.Called()

	var r0 db.RaidAlertsAccessLayer
	if rf, ok := ret.Get(0).(func() db.RaidAlertsAccessLayer); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(db.RaidAlertsAccessLayer)
		}
	}

	return r0
}

// Users provides a mock function with given fields:
func (_m *DataAccessLayer) Users() db.UsersAccessLayer {
	ret := _m.Called()

	var r0 db.UsersAccessLayer
	if rf, ok := ret.Get(0).(func() db.UsersAccessLayer); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(db.UsersAccessLayer)
		}
	}

	return r0
}
