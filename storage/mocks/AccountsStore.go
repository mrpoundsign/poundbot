// Code generated by mockery v1.0.0. DO NOT EDIT.
package mocks

import mock "github.com/stretchr/testify/mock"

import types "bitbucket.org/mrpoundsign/poundbot/types"

// AccountsStore is an autogenerated mock type for the AccountsStore type
type AccountsStore struct {
	mock.Mock
}

// AddClan provides a mock function with given fields: key, clan
func (_m *AccountsStore) AddClan(key string, clan types.Clan) error {
	ret := _m.Called(key, clan)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, types.Clan) error); ok {
		r0 = rf(key, clan)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// All provides a mock function with given fields: _a0
func (_m *AccountsStore) All(_a0 *[]types.Account) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(*[]types.Account) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GetByDiscordGuild provides a mock function with given fields: key, account
func (_m *AccountsStore) GetByDiscordGuild(key string, account *types.Account) error {
	ret := _m.Called(key, account)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, *types.Account) error); ok {
		r0 = rf(key, account)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GetByServerKey provides a mock function with given fields: key, account
func (_m *AccountsStore) GetByServerKey(key string, account *types.Account) error {
	ret := _m.Called(key, account)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, *types.Account) error); ok {
		r0 = rf(key, account)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Remove provides a mock function with given fields: key
func (_m *AccountsStore) Remove(key string) error {
	ret := _m.Called(key)

	var r0 error
	if rf, ok := ret.Get(0).(func(string) error); ok {
		r0 = rf(key)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// RemoveClan provides a mock function with given fields: key, clanTag
func (_m *AccountsStore) RemoveClan(key string, clanTag string) error {
	ret := _m.Called(key, clanTag)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, string) error); ok {
		r0 = rf(key, clanTag)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// SetClans provides a mock function with given fields: key, clans
func (_m *AccountsStore) SetClans(key string, clans []types.Clan) error {
	ret := _m.Called(key, clans)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, []types.Clan) error); ok {
		r0 = rf(key, clans)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// UpsertBase provides a mock function with given fields: _a0
func (_m *AccountsStore) UpsertBase(_a0 types.BaseAccount) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(types.BaseAccount) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
